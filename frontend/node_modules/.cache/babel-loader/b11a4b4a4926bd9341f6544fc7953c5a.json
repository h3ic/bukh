{"ast":null,"code":"var _jsxFileName = \"/home/h3ic/bukh/frontend/src/Activities.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ParticipationCheckbox(props) {\n  // onClick = () => TableHandler(user_id, party_id)\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n}\n\n_c = ParticipationCheckbox;\n\nfunction TotalAndDebt(props) {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = TotalAndDebt;\n\nfunction ActivityRow(props) {\n  const usersID = props.partyUsersID;\n  var checkboxes = [];\n\n  for (const userID of usersID) {\n    checkboxes.push( /*#__PURE__*/_jsxDEV(ParticipationCheckbox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.activityName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), checkboxes, /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.activityTotalPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = ActivityRow;\n\nfunction Activities(props) {\n  const activities = props.activities;\n  const users = props.users;\n  const partyUsersID = users && users.map(user => user.user_id.toString()); // const activitiesNames = activities && activities.map(activity => activity.activity_name.toString())\n  // const activitiesUsers = activities && activities.map(activity => activity.users_id)\n  // const activitiesTotalPrice = activities && activities.map(activity => activity.total_price.toString())\n  // console.log(activitiesUsers);\n\n  var activitiesRows = [];\n  console.log(users);\n  console.log(partyUsersID);\n\n  for (const activity of activities) {\n    // if (activities.hasOwnProperty(activity)) {\n    //     console.log(activities);\n    // }\n    const activityID = activity.activity_id;\n    const activityName = activity.activity_name;\n    const activityUsers = activity.users_id;\n    const activityExpense = activity.total_expense;\n    activitiesRows.push( /*#__PURE__*/_jsxDEV(ActivityRow, {\n      activityName: activityName,\n      activityUsers: activityUsers,\n      activityTotalPrice: activityExpense,\n      partyUsersID: partyUsersID\n    }, activityID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }, this));\n  }\n\n  console.log(activitiesRows);\n  var totalExpense = [];\n\n  for (const userID of partyUsersID) {\n    totalExpense.push(); //\n  }\n\n  return activitiesRows // <tr>\n  //     {activitiesNames && activitiesNames.map(activityName => <Activity key={activityName.toString()}\n  //                                                                       activityName={activityName}/>)}\n  //     {activitiesUsers && activitiesUsers.map(activityUsers => <ParticipationCheckbox\n  //         usersID={activityUsers}/>)}\n  //     {activitiesTotalPrice && activitiesTotalPrice.map(activityTotalPrice => <ActivityTotalPrice\n  //         key={activityTotalPrice.toString()}\n  //         totalPrice={activityTotalPrice}/>)}\n  // </tr>\n  ;\n}\n\n_c4 = Activities;\nexport default Activities;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ParticipationCheckbox\");\n$RefreshReg$(_c2, \"TotalAndDebt\");\n$RefreshReg$(_c3, \"ActivityRow\");\n$RefreshReg$(_c4, \"Activities\");","map":{"version":3,"sources":["/home/h3ic/bukh/frontend/src/Activities.js"],"names":["ParticipationCheckbox","props","TotalAndDebt","ActivityRow","usersID","partyUsersID","checkboxes","userID","push","activityName","activityTotalPrice","Activities","activities","users","map","user","user_id","toString","activitiesRows","console","log","activity","activityID","activity_id","activity_name","activityUsers","users_id","activityExpense","total_expense","totalExpense"],"mappings":";;;AACA,SAASA,qBAAT,CAA+BC,KAA/B,EAAsC;AAClC;AAEA,sBAAO;AAAA,2BAAI;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;KAJQD,qB;;AAMT,SAASE,YAAT,CAAsBD,KAAtB,EAA6B;AACzB,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;MANQC,Y;;AAQT,SAASC,WAAT,CAAqBF,KAArB,EAA4B;AACxB,QAAMG,OAAO,GAAGH,KAAK,CAACI,YAAtB;AACA,MAAIC,UAAU,GAAG,EAAjB;;AAEA,OAAK,MAAMC,MAAX,IAAqBH,OAArB,EAA8B;AAC1BE,IAAAA,UAAU,CAACE,IAAX,eAAgB,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,YAAhB;AACH;;AAED,sBACI;AAAA,4BACI;AAAA,gBAAKP,KAAK,CAACQ;AAAX;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKH,UAFL,eAGI;AAAA,gBAAKL,KAAK,CAACS;AAAX;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;MAfQP,W;;AAiBT,SAASQ,UAAT,CAAoBV,KAApB,EAA2B;AACvB,QAAMW,UAAU,GAAGX,KAAK,CAACW,UAAzB;AACA,QAAMC,KAAK,GAAGZ,KAAK,CAACY,KAApB;AACA,QAAMR,YAAY,GAAGQ,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACC,OAAL,CAAaC,QAAb,EAAlB,CAA9B,CAHuB,CAIvB;AACA;AACA;AACA;;AAEA,MAAIC,cAAc,GAAG,EAArB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYf,YAAZ;;AAEA,OAAK,MAAMgB,QAAX,IAAuBT,UAAvB,EAAmC;AAC/B;AACA;AACA;AACA,UAAMU,UAAU,GAAGD,QAAQ,CAACE,WAA5B;AACA,UAAMd,YAAY,GAAGY,QAAQ,CAACG,aAA9B;AACA,UAAMC,aAAa,GAAGJ,QAAQ,CAACK,QAA/B;AACA,UAAMC,eAAe,GAAGN,QAAQ,CAACO,aAAjC;AACAV,IAAAA,cAAc,CAACV,IAAf,eAAoB,QAAC,WAAD;AACa,MAAA,YAAY,EAAEC,YAD3B;AAEa,MAAA,aAAa,EAAEgB,aAF5B;AAGa,MAAA,kBAAkB,EAAEE,eAHjC;AAIa,MAAA,YAAY,EAAEtB;AAJ3B,OAAkBiB,UAAlB;AAAA;AAAA;AAAA;AAAA,YAApB;AAKH;;AACDH,EAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AAEA,MAAIW,YAAY,GAAG,EAAnB;;AAEA,OAAK,MAAMtB,MAAX,IAAqBF,YAArB,EAAmC;AAC/BwB,IAAAA,YAAY,CAACrB,IAAb,GAD+B,CAE/B;AACH;;AAED,SACIU,cADJ,CAGI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXJ;AAaH;;MAjDQP,U;AAmDT,eAAeA,UAAf","sourcesContent":["\nfunction ParticipationCheckbox(props) {\n    // onClick = () => TableHandler(user_id, party_id)\n\n    return <td><input type=\"checkbox\"/></td>\n}\n\nfunction TotalAndDebt(props) {\n    return (\n        <tr>\n\n        </tr>\n    );\n}\n\nfunction ActivityRow(props) {\n    const usersID = props.partyUsersID;\n    var checkboxes = [];\n\n    for (const userID of usersID) {\n        checkboxes.push(<ParticipationCheckbox/>);\n    }\n\n    return (\n        <tr>\n            <td>{props.activityName}</td>\n            {checkboxes}\n            <td>{props.activityTotalPrice}</td>\n        </tr>\n    );\n}\n\nfunction Activities(props) {\n    const activities = props.activities;\n    const users = props.users;\n    const partyUsersID = users && users.map(user => user.user_id.toString());\n    // const activitiesNames = activities && activities.map(activity => activity.activity_name.toString())\n    // const activitiesUsers = activities && activities.map(activity => activity.users_id)\n    // const activitiesTotalPrice = activities && activities.map(activity => activity.total_price.toString())\n    // console.log(activitiesUsers);\n\n    var activitiesRows = [];\n    console.log(users);\n    console.log(partyUsersID);\n\n    for (const activity of activities) {\n        // if (activities.hasOwnProperty(activity)) {\n        //     console.log(activities);\n        // }\n        const activityID = activity.activity_id;\n        const activityName = activity.activity_name;\n        const activityUsers = activity.users_id;\n        const activityExpense = activity.total_expense;\n        activitiesRows.push(<ActivityRow key={activityID}\n                                         activityName={activityName}\n                                         activityUsers={activityUsers}\n                                         activityTotalPrice={activityExpense}\n                                         partyUsersID={partyUsersID}/>);\n    }\n    console.log(activitiesRows);\n\n    var totalExpense = [];\n\n    for (const userID of partyUsersID) {\n        totalExpense.push()\n        //\n    }\n\n    return (\n        activitiesRows\n\n        // <tr>\n        //     {activitiesNames && activitiesNames.map(activityName => <Activity key={activityName.toString()}\n        //                                                                       activityName={activityName}/>)}\n        //     {activitiesUsers && activitiesUsers.map(activityUsers => <ParticipationCheckbox\n        //         usersID={activityUsers}/>)}\n        //     {activitiesTotalPrice && activitiesTotalPrice.map(activityTotalPrice => <ActivityTotalPrice\n        //         key={activityTotalPrice.toString()}\n        //         totalPrice={activityTotalPrice}/>)}\n        // </tr>\n    );\n}\n\nexport default Activities;"]},"metadata":{},"sourceType":"module"}