{"ast":null,"code":"var _jsxFileName = \"/home/h3ic/bukh/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport PartyTable from \"./PartyTable\";\nimport ActivityTable from \"./ActivityTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currParty, setCurrParty] = useState([]);\n  const [currUsers, setCurrUsers] = useState([]);\n  const [currActivities, setCurrActivities] = useState([]);\n  const [selectedActivity, setSelectedActivity] = useState();\n  const [currItems, setCurrItems] = useState([]);\n\n  const loadCurrParty = () => {\n    fetch('/get_recent_party').then(res => res.json()).then(json => setCurrParty(json)).catch(ex => console.log(ex));\n  };\n\n  useEffect(() => {\n    loadCurrParty();\n    getCurrUsers();\n    getCurrActivities();\n    getCurrItems();\n  }, []);\n\n  const getCurrUsers = () => {\n    fetch('/get_users').then(res => res.json()).then(json => setCurrUsers(json.party_users));\n  };\n\n  const getCurrActivities = () => {\n    fetch('/get_activities').then(res => res.json()).then(json => setCurrActivities(json.activities));\n  };\n\n  const getCurrItems = () => {\n    fetch('/get_items').then(res => res.json()).then(json => setCurrItems(json.items));\n  };\n\n  const updateActivityTable = activityID => {\n    const activity = currActivities.find(activity => activity.activity_id === activityID);\n    setSelectedActivity(activity);\n  };\n\n  const handleParticipationClick = (e, activityID, userID) => {\n    setCurrActivities(prevState => prevState.map(activity => {\n      if (activity.activity_id === activityID) {\n        const updatedUsersID = [...activity.users_id];\n        e.target.checked ? updatedUsersID.push(userID) : updatedUsersID.splice(updatedUsersID.indexOf(userID), 1);\n        return { ...activity,\n          users_id: updatedUsersID\n        };\n      } else return activity;\n    })); // if (selectedActivity.activity_id === activityID) {\n\n    updateActivityTable(activityID); // }\n  };\n\n  const handlePurchaseClick = (itemID, userID) => {\n    setCurrItems(prevState => prevState.map(item => {\n      if (item.item_id === itemID) {\n        return { ...item,\n          bought_by: userID\n        };\n      } else return item;\n    }));\n  };\n\n  console.log('app rendered');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tables-container\",\n      children: [/*#__PURE__*/_jsxDEV(PartyTable, {\n        users: currUsers,\n        activities: currActivities,\n        items: currItems,\n        party: currParty,\n        handleActivityClick: updateActivityTable,\n        handleParticipationClick: handleParticipationClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), selectedActivity ? /*#__PURE__*/_jsxDEV(ActivityTable, {\n        users: currUsers,\n        selectedActivity: selectedActivity,\n        items: currItems,\n        handlePurchaseClick: handlePurchaseClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 37\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"choose an activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"wMq5IxF0/ybukmgGauHctHjwqKc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/h3ic/bukh/frontend/src/App.js"],"names":["React","useEffect","useState","PartyTable","ActivityTable","App","currParty","setCurrParty","currUsers","setCurrUsers","currActivities","setCurrActivities","selectedActivity","setSelectedActivity","currItems","setCurrItems","loadCurrParty","fetch","then","res","json","catch","ex","console","log","getCurrUsers","getCurrActivities","getCurrItems","party_users","activities","items","updateActivityTable","activityID","activity","find","activity_id","handleParticipationClick","e","userID","prevState","map","updatedUsersID","users_id","target","checked","push","splice","indexOf","handlePurchaseClick","itemID","item","item_id","bought_by"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport './App.css';\nimport PartyTable from \"./PartyTable\"\nimport ActivityTable from \"./ActivityTable\"\n\nfunction App() {\n    const [currParty, setCurrParty] = useState([]);\n    const [currUsers, setCurrUsers] = useState([]);\n    const [currActivities, setCurrActivities] = useState([]);\n    const [selectedActivity, setSelectedActivity] = useState();\n    const [currItems, setCurrItems] = useState([]);\n\n    const loadCurrParty = () => {\n        fetch('/get_recent_party')\n            .then(res => res.json())\n            .then(json => setCurrParty(json))\n            .catch(ex => console.log(ex));\n    }\n\n    useEffect(() => {\n        loadCurrParty();\n        getCurrUsers();\n        getCurrActivities();\n        getCurrItems();\n    }, []);\n\n    const getCurrUsers = () => {\n        fetch('/get_users')\n            .then(res => res.json())\n            .then(json => setCurrUsers(json.party_users));\n    }\n\n    const getCurrActivities = () => {\n        fetch('/get_activities')\n            .then(res => res.json())\n            .then(json => setCurrActivities(json.activities));\n    }\n\n    const getCurrItems = () => {\n        fetch('/get_items')\n            .then(res => res.json())\n            .then(json => setCurrItems(json.items));\n    }\n\n    const updateActivityTable = (activityID) => {\n        const activity = currActivities.find(activity => activity.activity_id === activityID);\n        setSelectedActivity(activity);\n    }\n\n    const handleParticipationClick = (e, activityID, userID) => {\n        setCurrActivities(prevState => prevState.map(activity => {\n            if (activity.activity_id === activityID) {\n                const updatedUsersID = [...activity.users_id];\n                e.target.checked ?\n                    updatedUsersID.push(userID) :\n                    updatedUsersID.splice(updatedUsersID.indexOf(userID), 1);\n                return {\n                    ...activity,\n                    users_id: updatedUsersID\n                };\n            } else return activity;\n        }));\n        // if (selectedActivity.activity_id === activityID) {\n            updateActivityTable(activityID);\n        // }\n    }\n\n    const handlePurchaseClick = (itemID, userID) => {\n        setCurrItems(prevState => prevState.map(item => {\n            if (item.item_id === itemID) {\n                return {\n                    ...item,\n                    bought_by: userID\n                };\n            } else return item;\n        }));\n    }\n    console.log('app rendered');\n\n    return (\n        <div className=\"App\">\n            <div className=\"tables-container\">\n                <PartyTable users={currUsers}\n                            activities={currActivities}\n                            items={currItems}\n                            party={currParty}\n                            handleActivityClick={updateActivityTable}\n                            handleParticipationClick={handleParticipationClick}/>\n                {selectedActivity ? <ActivityTable users={currUsers}\n                                                   selectedActivity={selectedActivity}\n                                                   items={currItems}\n                                                   handlePurchaseClick={handlePurchaseClick}/> :\n                    <div>choose an activity</div>\n                }\n            </div>\n        </div>\n\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}