{"ast":null,"code":"var _jsxFileName = \"/home/h3ic/bukh/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport PartyTable from \"./PartyTable\";\nimport ActivityTable from \"./ActivityTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currParty, setCurrParty] = useState([]);\n  const [currUsers, setCurrUsers] = useState([]);\n  const [currActivities, setCurrActivities] = useState([]);\n  const [selectedActivity, setSelectedActivity] = useState();\n  const [currItems, setCurrItems] = useState([]);\n\n  const loadCurrParty = () => {\n    fetch('/get_recent_party').then(res => res.json()).then(json => setCurrParty(json)).catch(ex => console.log(ex));\n  };\n\n  useEffect(() => {\n    let mounted = true;\n\n    if (mounted) {\n      loadCurrParty();\n      getCurrUsers();\n      getCurrActivities();\n      getCurrItems();\n    }\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const getCurrUsers = () => {\n    fetch('/get_users').then(res => res.json()).then(json => setCurrUsers(json.party_users));\n  };\n\n  const getCurrActivities = () => {\n    fetch('/get_activities').then(res => res.json()).then(json => setCurrActivities(json.activities));\n  };\n\n  const getCurrItems = () => {\n    fetch('/get_items').then(res => res.json()).then(json => setCurrItems(json.items));\n  }; // last_viewed patch request\n  // edit mode\n  // jsons may be and are empty in the beginning\n  // the rendered activity (passed as props) should be the part of currActivities\n\n\n  const handleActivityClick = activity => {\n    // set property of an activity!\n    // or! in activities, there is a property with an id of the selected one\n    setSelectedActivity(activity);\n  };\n\n  const handleParticipationClick = (e, activityID, userID) => {\n    setCurrActivities(prevState => prevState.map(obj => {\n      if (obj.activity_id === activityID) {\n        const updatedUsersID = [...obj.users_id];\n        console.log(e.target.checked);\n        e.target.checked ? updatedUsersID.push(userID) : updatedUsersID.splice(updatedUsersID.indexOf(userID), 1);\n        return { ...obj,\n          users_id: updatedUsersID\n        };\n      } else return obj;\n    }));\n  };\n\n  const handlePurchaseClick = (activityID, itemID, userID) => {\n    // setCurrActivities((currActivities.find(obj => obj.activity_id === activityID).items)\n    const items = { ...currActivities.items\n    };\n    let filtItems = items.filter(item => item.item_id === itemID);\n    filtItems.bought_by = userID;\n    setCurrActivities(prevState => prevState.filter(obj => obj.actitity_id === activityID).map(obj => {\n      if (obj.item_id === itemID) {\n        return {\n          // ...obj,\n          // items: {\n          //     ...obj.items,\n          //     bought_by: userID\n          // }\n          obj\n        };\n      } else return obj;\n    }));\n  };\n\n  console.log(currActivities);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: currParty.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PartyTable, {\n      users: currUsers,\n      activities: currActivities,\n      handleActivityClick: handleActivityClick,\n      handleParticipationClick: handleParticipationClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), selectedActivity ? /*#__PURE__*/_jsxDEV(ActivityTable, {\n      users: currUsers,\n      selectedActivity: selectedActivity,\n      handlePurchaseClick: handlePurchaseClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }, this) :\n    /*#__PURE__*/\n    // <ActivityTable users={currUsers}\n    //                items={currItems}\n    //                handlePurchaseClick={handlePurchaseClick}/>\n    _jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"wMq5IxF0/ybukmgGauHctHjwqKc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/h3ic/bukh/frontend/src/App.js"],"names":["React","useEffect","useState","PartyTable","ActivityTable","App","currParty","setCurrParty","currUsers","setCurrUsers","currActivities","setCurrActivities","selectedActivity","setSelectedActivity","currItems","setCurrItems","loadCurrParty","fetch","then","res","json","catch","ex","console","log","mounted","getCurrUsers","getCurrActivities","getCurrItems","party_users","activities","items","handleActivityClick","activity","handleParticipationClick","e","activityID","userID","prevState","map","obj","activity_id","updatedUsersID","users_id","target","checked","push","splice","indexOf","handlePurchaseClick","itemID","filtItems","filter","item","item_id","bought_by","actitity_id","name"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport './App.css';\nimport PartyTable from \"./PartyTable\"\nimport ActivityTable from \"./ActivityTable\"\n\nfunction App() {\n    const [currParty, setCurrParty] = useState([]);\n    const [currUsers, setCurrUsers] = useState([]);\n    const [currActivities, setCurrActivities] = useState([]);\n    const [selectedActivity, setSelectedActivity] = useState();\n    const [currItems, setCurrItems] = useState([]);\n\n    const loadCurrParty = () => {\n        fetch('/get_recent_party')\n            .then(res => res.json())\n            .then(json => setCurrParty(json))\n            .catch(ex => console.log(ex));\n    }\n\n    useEffect(() => {\n        let mounted = true;\n        if (mounted) {\n            loadCurrParty();\n            getCurrUsers();\n            getCurrActivities();\n            getCurrItems();\n        }\n        return () => {\n            mounted = false;\n        };\n    }, []);\n\n    const getCurrUsers = () => {\n        fetch('/get_users')\n            .then(res => res.json())\n            .then(json => setCurrUsers(json.party_users));\n    }\n\n    const getCurrActivities = () => {\n        fetch('/get_activities')\n            .then(res => res.json())\n            .then(json => setCurrActivities(json.activities));\n    }\n\n    const getCurrItems = () => {\n        fetch('/get_items')\n            .then(res => res.json())\n            .then(json => setCurrItems(json.items));\n    }\n\n    // last_viewed patch request\n    // edit mode\n    // jsons may be and are empty in the beginning\n\n    // the rendered activity (passed as props) should be the part of currActivities\n    const handleActivityClick = (activity) => {\n        // set property of an activity!\n        // or! in activities, there is a property with an id of the selected one\n        setSelectedActivity(activity);\n    }\n\n    const handleParticipationClick = (e, activityID, userID) => {\n        setCurrActivities(prevState => prevState.map(obj => {\n            if (obj.activity_id === activityID) {\n                const updatedUsersID = [...obj.users_id];\n                console.log(e.target.checked);\n                e.target.checked ?\n                    updatedUsersID.push(userID) :\n                    updatedUsersID.splice(updatedUsersID.indexOf(userID), 1);\n                return {\n                    ...obj,\n                    users_id: updatedUsersID\n                };\n            } else return obj;\n        }));\n    }\n\n    const handlePurchaseClick = (activityID, itemID, userID) => {\n        // setCurrActivities((currActivities.find(obj => obj.activity_id === activityID).items)\n\n        const items = {...currActivities.items};\n        let filtItems = items.filter(item => item.item_id === itemID);\n        filtItems.bought_by = userID;\n\n        setCurrActivities(prevState => prevState.filter(obj => obj.actitity_id === activityID)\n            .map(obj => {\n                if (obj.item_id === itemID) {\n                    return {\n                        // ...obj,\n                        // items: {\n                        //     ...obj.items,\n                        //     bought_by: userID\n                        // }\n                        obj\n                    }\n                } else return obj;\n            }));\n    }\n\n    console.log(currActivities);\n\n    return (\n        <div className=\"App\">\n            {/*<header className=\"App-header\"></header>*/}\n            <h1>{currParty.name}</h1>\n            <PartyTable users={currUsers}\n                        activities={currActivities}\n                        handleActivityClick={handleActivityClick}\n                        handleParticipationClick={handleParticipationClick}/>\n            {selectedActivity ? <ActivityTable users={currUsers}\n                                               selectedActivity={selectedActivity}\n                                               handlePurchaseClick={handlePurchaseClick}/> :\n                // <ActivityTable users={currUsers}\n                //                items={currItems}\n                //                handlePurchaseClick={handlePurchaseClick}/>\n                <div></div>\n            }\n        </div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}