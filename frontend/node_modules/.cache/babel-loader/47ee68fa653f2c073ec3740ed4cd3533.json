{"ast":null,"code":"// right-side panel in partyTable\nexport function calcActivityExpenses(activities, items) {\n  let activityExpenses = {};\n\n  for (const activity of activities) {\n    activityExpenses[activity.activity_id] = 0;\n    const activityItems = items.filter(item => activity.items_id.includes(item.item_id));\n\n    for (const item of activityItems) {\n      activityExpenses[activity.activity_id] += item.item_price;\n    }\n  }\n\n  return activityExpenses;\n} // total & debt row in partyTable\n\nexport function calcTotalUsersFinance(users, activities, items, activitiesExpenses) {\n  let totalUsersFinance = Object.fromEntries(users.map(user => [user.user_id, {\n    'expenses': 0,\n    'debt': 0\n  }]));\n\n  for (const activity of activities) {\n    const partialExpense = activitiesExpenses[activity.activity_id] / activity.users_id.length;\n    const activityItems = items.filter(item => activity.items_id.includes(item.item_id));\n\n    for (const userID of activity.users_id) {\n      totalUsersFinance[userID]['expenses'] += partialExpense;\n      totalUsersFinance[userID]['debt'] += partialExpense;\n    }\n\n    for (const item of activityItems) {\n      totalUsersFinance[item.bought_by]['debt'] -= item.item_price;\n    }\n  }\n\n  for (const userID in totalUsersFinance) {\n    totalUsersFinance[userID]['expenses'] = Math.round(totalUsersFinance[userID]['expenses'] * 100) / 100;\n    totalUsersFinance[userID]['debt'] = Math.round(totalUsersFinance[userID]['debt'] * 100) / 100;\n  }\n\n  return totalUsersFinance;\n} // total row in activityTable\n\nexport function calcActivityUserExpenses(items) {\n  let activityUserExpenses = {};\n\n  for (const item of items) {\n    activityUserExpenses[item.bought_by] += item.item_price;\n  }\n\n  return activityUserExpenses;\n}","map":{"version":3,"sources":["/home/h3ic/bukh/frontend/src/Calculations.js"],"names":["calcActivityExpenses","activities","items","activityExpenses","activity","activity_id","activityItems","filter","item","items_id","includes","item_id","item_price","calcTotalUsersFinance","users","activitiesExpenses","totalUsersFinance","Object","fromEntries","map","user","user_id","partialExpense","users_id","length","userID","bought_by","Math","round","calcActivityUserExpenses","activityUserExpenses"],"mappings":"AAAA;AACA,OAAO,SAASA,oBAAT,CAA8BC,UAA9B,EAA0CC,KAA1C,EAAiD;AACpD,MAAIC,gBAAgB,GAAG,EAAvB;;AAEA,OAAK,MAAMC,QAAX,IAAuBH,UAAvB,EAAmC;AAC/BE,IAAAA,gBAAgB,CAACC,QAAQ,CAACC,WAAV,CAAhB,GAAyC,CAAzC;AACA,UAAMC,aAAa,GAAGJ,KAAK,CAACK,MAAN,CAAaC,IAAI,IAAIJ,QAAQ,CAACK,QAAT,CAAkBC,QAAlB,CAA2BF,IAAI,CAACG,OAAhC,CAArB,CAAtB;;AACA,SAAK,MAAMH,IAAX,IAAmBF,aAAnB,EAAkC;AAC9BH,MAAAA,gBAAgB,CAACC,QAAQ,CAACC,WAAV,CAAhB,IAA0CG,IAAI,CAACI,UAA/C;AACH;AACJ;;AACD,SAAOT,gBAAP;AACH,C,CAED;;AACA,OAAO,SAASU,qBAAT,CAA+BC,KAA/B,EAAsCb,UAAtC,EAAkDC,KAAlD,EAAyDa,kBAAzD,EAA6E;AAChF,MAAIC,iBAAiB,GAAGC,MAAM,CAACC,WAAP,CAAmBJ,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAI,CAACA,IAAI,CAACC,OAAN,EAAe;AACxE,gBAAY,CAD4D;AAExE,YAAQ;AAFgE,GAAf,CAAlB,CAAnB,CAAxB;;AAKA,OAAK,MAAMjB,QAAX,IAAuBH,UAAvB,EAAmC;AAE/B,UAAMqB,cAAc,GAAGP,kBAAkB,CAACX,QAAQ,CAACC,WAAV,CAAlB,GAA2CD,QAAQ,CAACmB,QAAT,CAAkBC,MAApF;AACA,UAAMlB,aAAa,GAAGJ,KAAK,CAACK,MAAN,CAAaC,IAAI,IAAIJ,QAAQ,CAACK,QAAT,CAAkBC,QAAlB,CAA2BF,IAAI,CAACG,OAAhC,CAArB,CAAtB;;AAEA,SAAK,MAAMc,MAAX,IAAqBrB,QAAQ,CAACmB,QAA9B,EAAwC;AACpCP,MAAAA,iBAAiB,CAACS,MAAD,CAAjB,CAA0B,UAA1B,KAAyCH,cAAzC;AACAN,MAAAA,iBAAiB,CAACS,MAAD,CAAjB,CAA0B,MAA1B,KAAqCH,cAArC;AACH;;AACD,SAAK,MAAMd,IAAX,IAAmBF,aAAnB,EAAkC;AAC9BU,MAAAA,iBAAiB,CAACR,IAAI,CAACkB,SAAN,CAAjB,CAAkC,MAAlC,KAA6ClB,IAAI,CAACI,UAAlD;AACH;AACJ;;AAED,OAAK,MAAMa,MAAX,IAAqBT,iBAArB,EAAwC;AACpCA,IAAAA,iBAAiB,CAACS,MAAD,CAAjB,CAA0B,UAA1B,IAAwCE,IAAI,CAACC,KAAL,CAAWZ,iBAAiB,CAACS,MAAD,CAAjB,CAA0B,UAA1B,IAAwC,GAAnD,IAA0D,GAAlG;AACAT,IAAAA,iBAAiB,CAACS,MAAD,CAAjB,CAA0B,MAA1B,IAAoCE,IAAI,CAACC,KAAL,CAAWZ,iBAAiB,CAACS,MAAD,CAAjB,CAA0B,MAA1B,IAAoC,GAA/C,IAAsD,GAA1F;AACH;;AACD,SAAOT,iBAAP;AACH,C,CAGD;;AACA,OAAO,SAASa,wBAAT,CAAkC3B,KAAlC,EAAyC;AAC5C,MAAI4B,oBAAoB,GAAG,EAA3B;;AACA,OAAK,MAAMtB,IAAX,IAAmBN,KAAnB,EAA0B;AACtB4B,IAAAA,oBAAoB,CAACtB,IAAI,CAACkB,SAAN,CAApB,IAAwClB,IAAI,CAACI,UAA7C;AACH;;AACD,SAAOkB,oBAAP;AACH","sourcesContent":["// right-side panel in partyTable\nexport function calcActivityExpenses(activities, items) {\n    let activityExpenses = {};\n\n    for (const activity of activities) {\n        activityExpenses[activity.activity_id] = 0;\n        const activityItems = items.filter(item => activity.items_id.includes(item.item_id));\n        for (const item of activityItems) {\n            activityExpenses[activity.activity_id] += item.item_price;\n        }\n    }\n    return activityExpenses;\n}\n\n// total & debt row in partyTable\nexport function calcTotalUsersFinance(users, activities, items, activitiesExpenses) {\n    let totalUsersFinance = Object.fromEntries(users.map(user => [user.user_id, {\n        'expenses': 0,\n        'debt': 0\n    }]));\n\n    for (const activity of activities) {\n\n        const partialExpense = activitiesExpenses[activity.activity_id] / activity.users_id.length;\n        const activityItems = items.filter(item => activity.items_id.includes(item.item_id));\n\n        for (const userID of activity.users_id) {\n            totalUsersFinance[userID]['expenses'] += partialExpense;\n            totalUsersFinance[userID]['debt'] += partialExpense;\n        }\n        for (const item of activityItems) {\n            totalUsersFinance[item.bought_by]['debt'] -= item.item_price;\n        }\n    }\n\n    for (const userID in totalUsersFinance) {\n        totalUsersFinance[userID]['expenses'] = Math.round(totalUsersFinance[userID]['expenses'] * 100) / 100;\n        totalUsersFinance[userID]['debt'] = Math.round(totalUsersFinance[userID]['debt'] * 100) / 100;\n    }\n    return totalUsersFinance;\n}\n\n\n// total row in activityTable\nexport function calcActivityUserExpenses(items) {\n    let activityUserExpenses = {};\n    for (const item of items) {\n        activityUserExpenses[item.bought_by] += item.item_price;\n    }\n    return activityUserExpenses;\n}"]},"metadata":{},"sourceType":"module"}