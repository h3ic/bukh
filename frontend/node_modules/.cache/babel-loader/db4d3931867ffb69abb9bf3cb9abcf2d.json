{"ast":null,"code":"var _jsxFileName = \"/home/h3ic/bukh/frontend/src/Activities.js\";\nimport { ActivityRowCell, RowCell, ParticipationCheckbox, TotalRow } from \"./TableElements\";\nimport { calcActivityExpenses, calcTotalUsersFinance } from './Calculations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ActivityRow(props) {\n  let checkboxes = [];\n\n  for (const userID of props.partyUsersID) {\n    const userHasItemsBought = props.activityItems.some(item => item.bought_by === userID);\n    checkboxes.push( /*#__PURE__*/_jsxDEV(ParticipationCheckbox, {\n      handleCheckboxClick: props.handleCheckboxClick,\n      activityID: props.activityID,\n      userID: userID,\n      userHasItemsBought: userHasItemsBought,\n      defaultChecked: props.activityUsers.includes(userID)\n    }, props.activityID.toString() + userID.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 25\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(ActivityRowCell, {\n      activity: props.activity,\n      value: props.activityName,\n      handleActivityClick: props.handleActivityClick\n    }, props.activityName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), checkboxes, /*#__PURE__*/_jsxDEV(RowCell, {\n      value: props.activityExpense\n    }, props.activityID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ActivityRow;\n\nfunction Activities(props) {\n  const partyUsersID = props.users.map(user => user.user_id);\n  const activitiesExpenses = calcActivityExpenses(props.activities, props.items);\n  const totalUsersFinance = calcTotalUsersFinance(props.users, props.activities, props.items, activitiesExpenses);\n  const usersExpenses = totalUsersFinance.expenses;\n  const usersDebt = totalUsersFinance.debt;\n  let activitiesRows = [];\n\n  for (const activity of props.activities) {\n    const activityID = activity.activity_id;\n    const activityName = activity.activity_name;\n    const activityUsers = activity.users_id; // code repetition\n\n    const activityItems = props.items.filter(item => activity.items_id.includes(item.item_id));\n    activitiesRows.push( /*#__PURE__*/_jsxDEV(ActivityRow, {\n      activity: activity,\n      activityID: activityID,\n      activityName: activityName,\n      activityUsers: activityUsers,\n      activityItems: activityItems,\n      activityExpense: activitiesExpenses[activityID],\n      partyUsersID: partyUsersID,\n      handleActivityClick: props.handleActivityClick,\n      handleCheckboxClick: props.handleCheckboxClick\n    }, activityID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }, this));\n  }\n\n  activitiesRows.push( /*#__PURE__*/_jsxDEV(TotalRow, {\n    rowName: 'Total',\n    expenses: usersExpenses\n  }, -1, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 25\n  }, this));\n  activitiesRows.push( /*#__PURE__*/_jsxDEV(TotalRow, {\n    rowName: 'Debt',\n    expenses: usersDebt\n  }, -2, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 25\n  }, this));\n  return activitiesRows;\n}\n\n_c2 = Activities;\nexport default Activities;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ActivityRow\");\n$RefreshReg$(_c2, \"Activities\");","map":{"version":3,"sources":["/home/h3ic/bukh/frontend/src/Activities.js"],"names":["ActivityRowCell","RowCell","ParticipationCheckbox","TotalRow","calcActivityExpenses","calcTotalUsersFinance","ActivityRow","props","checkboxes","userID","partyUsersID","userHasItemsBought","activityItems","some","item","bought_by","push","handleCheckboxClick","activityID","activityUsers","includes","toString","activity","activityName","handleActivityClick","activityExpense","Activities","users","map","user","user_id","activitiesExpenses","activities","items","totalUsersFinance","usersExpenses","expenses","usersDebt","debt","activitiesRows","activity_id","activity_name","users_id","filter","items_id","item_id"],"mappings":"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","sourcesContent":["import {ActivityRowCell, RowCell, ParticipationCheckbox, TotalRow} from \"./TableElements\";\nimport {calcActivityExpenses, calcTotalUsersFinance} from './Calculations';\n\n\nfunction ActivityRow(props) {\n    let checkboxes = [];\n    for (const userID of props.partyUsersID) {\n        const userHasItemsBought = props.activityItems.some(item => item.bought_by === userID);\n        checkboxes.push(<ParticipationCheckbox key={props.activityID.toString() + userID.toString()}\n                                               handleCheckboxClick={props.handleCheckboxClick}\n                                               activityID={props.activityID}\n                                               userID={userID}\n                                               userHasItemsBought={userHasItemsBought}\n                                               defaultChecked={props.activityUsers.includes(userID)}/>);\n    }\n    return (\n        <tr>\n            <ActivityRowCell key={props.activityName}\n                             activity={props.activity}\n                             value={props.activityName} handleActivityClick={props.handleActivityClick}/>\n            {checkboxes}\n            <RowCell key={props.activityID} value={props.activityExpense}/>\n        </tr>\n    );\n}\n\nfunction Activities(props) {\n    const partyUsersID = props.users.map(user => user.user_id);\n    const activitiesExpenses = calcActivityExpenses(props.activities, props.items);\n    const totalUsersFinance = calcTotalUsersFinance(props.users, props.activities, props.items, activitiesExpenses);\n    const usersExpenses = totalUsersFinance.expenses;\n    const usersDebt = totalUsersFinance.debt;\n\n    let activitiesRows = [];\n\n    for (const activity of props.activities) {\n        const activityID = activity.activity_id;\n        const activityName = activity.activity_name;\n        const activityUsers = activity.users_id;\n        // code repetition\n        const activityItems = props.items.filter(item => activity.items_id.includes(item.item_id));\n\n        activitiesRows.push(<ActivityRow key={activityID}\n                                         activity={activity}\n                                         activityID={activityID}\n                                         activityName={activityName}\n                                         activityUsers={activityUsers}\n                                         activityItems={activityItems}\n                                         activityExpense={activitiesExpenses[activityID]}\n                                         partyUsersID={partyUsersID}\n                                         handleActivityClick={props.handleActivityClick}\n                                         handleCheckboxClick={props.handleCheckboxClick}\n        />);\n    }\n\n    activitiesRows.push(<TotalRow key={-1} rowName={'Total'} expenses={usersExpenses}/>);\n    activitiesRows.push(<TotalRow key={-2} rowName={'Debt'} expenses={usersDebt}/>);\n\n    return activitiesRows;\n}\n\nexport default Activities;"]},"metadata":{},"sourceType":"module"}