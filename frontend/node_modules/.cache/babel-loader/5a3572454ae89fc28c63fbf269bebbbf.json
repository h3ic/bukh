{"ast":null,"code":"var _jsxFileName = \"/home/h3ic/bukh/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport PartyTable from \"./PartyTable\";\nimport ActivityTable from \"./ActivityTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currParty, setCurrParty] = useState([]);\n  const [currUsers, setCurrUsers] = useState([]);\n  const [currActivities, setCurrActivities] = useState([]);\n  const [selectedActivity, setSelectedActivity] = useState({});\n  const [currItems, setCurrItems] = useState([]); // const getCurrUsers = () => {\n  //     fetch('/get_users')\n  //         .then(res => res.json())\n  //         .then(json => setCurrUsers(json.party_users));\n  // }\n  // const getCurrActivities = () => {\n  //     fetch('/get_activities')\n  //         .then(res => res.json())\n  //         .then(json => setCurrActivities(json.activities));\n  // }\n  //\n  // const getCurrItems = () => {\n  //     fetch('/get_items')\n  //         .then(res => res.json())\n  //         .then(json => setCurrItems(json.items));\n  // }\n\n  const getCurrParty = () => {\n    fetch('/get_recent_party').then(res => res.json()).then(json => setCurrParty(json)).catch(ex => console.log(ex));\n  };\n\n  const getCurrUsers = () => {\n    setCurrUsers(currParty.users);\n  };\n\n  const getCurrActivities = () => {\n    setCurrActivities(currParty.activities);\n  };\n\n  const getSelectedActivity = () => {\n    setSelectedActivity(currActivities[0]);\n  };\n\n  const getCurrItems = () => {\n    setCurrItems(selectedActivity.items);\n  };\n\n  useEffect(() => {\n    getCurrParty();\n  });\n  getCurrUsers();\n  getCurrActivities();\n  getSelectedActivity();\n  getCurrItems(); // last_viewed patch request\n  // edit mode\n  // jsons may be and are empty in the beginning\n  // be good without e argument and check by presence of user in array\n\n  const handleParticipationClick = (e, activityID, userID) => {\n    setCurrActivities([...currActivities].map(obj => {\n      if (obj.activity_id === activityID) {\n        const updatedUsersID = obj.users_id;\n        e.target.checked ? updatedUsersID.push(userID) : updatedUsersID.splice(updatedUsersID.indexOf(userID));\n        return { ...obj,\n          users_id: updatedUsersID\n        };\n      } else return obj;\n    }));\n  };\n\n  const handlePurchaseClick = (itemID, userID) => {\n    setCurrItems([...currItems].map(obj => {\n      if (obj.item_id === itemID) {\n        return { ...obj,\n          bought_by: userID\n        };\n      } else return obj;\n    }));\n  }; // console.log(currActivities);\n\n\n  return (\n    /*#__PURE__*/\n    // <p>{currActivities[0].activity_name}</p>\n    _jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bukh\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: currParty.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(PartyTable, {\n          users: currUsers,\n          activities: currActivities,\n          handleParticipationClick: handleParticipationClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: selectedActivity.activity_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ActivityTable, {\n          users: currUsers,\n          items: currItems,\n          selectedActivity: selectedActivity,\n          handlePurchaseClick: handlePurchaseClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(App, \"zJ0cO1YeiGx8tM3C5Jos+NFKBX8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/h3ic/bukh/frontend/src/App.js"],"names":["React","useEffect","useState","PartyTable","ActivityTable","App","currParty","setCurrParty","currUsers","setCurrUsers","currActivities","setCurrActivities","selectedActivity","setSelectedActivity","currItems","setCurrItems","getCurrParty","fetch","then","res","json","catch","ex","console","log","getCurrUsers","users","getCurrActivities","activities","getSelectedActivity","getCurrItems","items","handleParticipationClick","e","activityID","userID","map","obj","activity_id","updatedUsersID","users_id","target","checked","push","splice","indexOf","handlePurchaseClick","itemID","item_id","bought_by","name","activity_name"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport './App.css';\nimport PartyTable from \"./PartyTable\"\nimport ActivityTable from \"./ActivityTable\"\n\n\nfunction App() {\n    const [currParty, setCurrParty] = useState([]);\n    const [currUsers, setCurrUsers] = useState([]);\n    const [currActivities, setCurrActivities] = useState([]);\n    const [selectedActivity, setSelectedActivity] = useState({});\n    const [currItems, setCurrItems] = useState([]);\n\n    // const getCurrUsers = () => {\n    //     fetch('/get_users')\n    //         .then(res => res.json())\n    //         .then(json => setCurrUsers(json.party_users));\n    // }\n\n    // const getCurrActivities = () => {\n    //     fetch('/get_activities')\n    //         .then(res => res.json())\n    //         .then(json => setCurrActivities(json.activities));\n    // }\n    //\n    // const getCurrItems = () => {\n    //     fetch('/get_items')\n    //         .then(res => res.json())\n    //         .then(json => setCurrItems(json.items));\n    // }\n\n    const getCurrParty = () => {\n        fetch('/get_recent_party')\n            .then(res => res.json())\n            .then(json => setCurrParty(json))\n            .catch(ex => console.log(ex));\n    }\n\n    const getCurrUsers = () => {\n        setCurrUsers(currParty.users);\n    }\n\n    const getCurrActivities = () => {\n        setCurrActivities(currParty.activities);\n    }\n\n    const getSelectedActivity = () => {\n        setSelectedActivity(currActivities[0]);\n    }\n\n    const getCurrItems = () => {\n        setCurrItems(selectedActivity.items);\n    }\n\n    useEffect(() => {\n        getCurrParty();\n    });\n    getCurrUsers();\n    getCurrActivities();\n    getSelectedActivity();\n    getCurrItems();\n\n    // last_viewed patch request\n    // edit mode\n    // jsons may be and are empty in the beginning\n\n    // be good without e argument and check by presence of user in array\n    const handleParticipationClick = (e, activityID, userID) => {\n        setCurrActivities([...currActivities].map(obj => {\n            if (obj.activity_id === activityID) {\n                const updatedUsersID = obj.users_id;\n                e.target.checked ?\n                    updatedUsersID.push(userID) :\n                    updatedUsersID.splice(updatedUsersID.indexOf(userID));\n                return {\n                    ...obj,\n                    users_id: updatedUsersID\n                }\n            } else return obj;\n        }));\n    }\n\n    const handlePurchaseClick = (itemID, userID) => {\n        setCurrItems([...currItems].map(obj => {\n            if (obj.item_id === itemID) {\n                return {\n                    ...obj,\n                    bought_by: userID\n                }\n            } else return obj;\n        }));\n    }\n    // console.log(currActivities);\n\n    return (\n        // <p>{currActivities[0].activity_name}</p>\n        <div className=\"App\">\n            {/*<header className=\"App-header\"></header>*/}\n            <div className=\"bukh\">\n                <h1>{currParty.name}</h1>\n                <PartyTable users={currUsers}\n                            activities={currActivities}\n                            handleParticipationClick={handleParticipationClick}/>\n                <h1>{selectedActivity.activity_name}</h1>\n                <ActivityTable users={currUsers}\n                               items={currItems}\n                               selectedActivity={selectedActivity}\n                               handlePurchaseClick={handlePurchaseClick}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}