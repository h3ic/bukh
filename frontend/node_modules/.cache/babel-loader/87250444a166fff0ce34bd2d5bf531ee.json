{"ast":null,"code":"var _jsxFileName = \"/home/h3ic/bukh/frontend/src/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport PartyTable from \"./PartyTable\";\nimport ActivityTable from \"./ActivityTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  _s();\n\n  const [currUsers, setCurrUsers] = useState([]);\n  const [currActivities, setCurrActivities] = useState([]);\n  const [selectedActivity, setSelectedActivity] = useState({});\n  const [currItems, setCurrItems] = useState([]); // const [selectedActivity, setSelectedActivity] = useState({\n  //     activity_name: \"nnn\",\n  //     users_id: [1, 2, 3],\n  //     items: [\n  //         {\n  //             \"item_id\": 3,\n  //             \"item_name\": \"lamp\",\n  //             \"item_price\": 100,\n  //             \"bought_by\": 1\n  //         }\n  //     ]\n  // });\n  // const getCurrUsers = () => {\n  //     fetch('/get_users')\n  //         .then(res => res.json())\n  //         .then(json => setCurrUsers(json.party_users));\n  // }\n  //\n  // const getCurrActivities = () => {\n  //     fetch('/get_activities')\n  //         .then(res => res.json())\n  //         .then(json => setCurrActivities(json.activities));\n  // }\n  //\n  // const getCurrItems = () => {\n  //     fetch('/get_items')\n  //         .then(res => res.json())\n  //         .then(json => setCurrItems(json.items));\n  // }\n\n  const currParty = props.currParty;\n  console.log('dd');\n  console.log(currParty);\n\n  async function getCurrUsers(party) {\n    await setCurrUsers(party.users);\n  } // useEffect(() => {\n  //     let mounted = true;\n  //     if (mounted) {\n  //         getCurrUsers(currParty);\n  //     }\n  //     return () => {\n  //         mounted = false;\n  //     };\n  // }, [currUsers]); // ?\n  // setCurrUsers(currParty.users);\n  // setCurrActivities(currParty.activities);\n  // setSelectedActivity(currParty.activities[0]);\n  // setCurrItems(currParty.activities[0].items);\n  // console.log(currActivities);\n  // return () => {\n  //     setCurrUsers({});\n  //     setCurrActivities({});\n  // };\n  // console.log(currUsers);\n  // useEffect(() => {\n  //     setSelectedActivity(currActivities[0]);\n  //     setCurrItems(selectedActivity.items);\n  // }, [currParty, currActivities])\n  // last_viewed patch request\n  // edit mode\n  // jsons may be and are empty in the beginning\n  // be good without e argument and check by presence of user in array\n\n\n  const handleParticipationClick = (e, activityID, userID) => {\n    setCurrActivities([...currActivities].map(obj => {\n      if (obj.activity_id === activityID) {\n        const updatedUsersID = obj.users_id;\n        e.target.checked ? updatedUsersID.push(userID) : updatedUsersID.splice(updatedUsersID.indexOf(userID));\n        return { ...obj,\n          users_id: updatedUsersID\n        };\n      } else return obj;\n    }));\n  };\n\n  const handlePurchaseClick = (itemID, userID) => {\n    setCurrItems([...currItems].map(obj => {\n      if (obj.item_id === itemID) {\n        return { ...obj,\n          bought_by: userID\n        };\n      } else return obj;\n    }));\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div className=\"App\">\n    //     {/*<header className=\"App-header\"></header>*/}\n    //     <div className=\"bukh\">\n    //         <h1>{currParty.name}</h1>\n    //         <PartyTable users={currUsers}\n    //                     activities={currActivities}\n    //                     handleParticipationClick={handleParticipationClick}/>\n    //         {/*<h1>{currActivities[0].activity_name}</h1>*/}\n    //         <ActivityTable users={currUsers}\n    //                        items={currItems}\n    //             // selectedActivity={selectedActivity}\n    //                        handlePurchaseClick={handlePurchaseClick}/>\n    //     </div>\n    // </div>\n    _jsxDEV(\"p\", {\n      children: currParty.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Main, \"bde/gOrqxgxJweqefAJQoZSERX0=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/h3ic/bukh/frontend/src/Main.js"],"names":["React","useEffect","useLayoutEffect","useState","PartyTable","ActivityTable","Main","props","currUsers","setCurrUsers","currActivities","setCurrActivities","selectedActivity","setSelectedActivity","currItems","setCurrItems","currParty","console","log","getCurrUsers","party","users","handleParticipationClick","e","activityID","userID","map","obj","activity_id","updatedUsersID","users_id","target","checked","push","splice","indexOf","handlePurchaseClick","itemID","item_id","bought_by","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,eAA1B,EAA2CC,QAA3C,QAA0D,OAA1D;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACS,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C,CAJiB,CAKjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMa,SAAS,GAAGT,KAAK,CAACS,SAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;;AAEA,iBAAeG,YAAf,CAA4BC,KAA5B,EAAmC;AAC/B,UAAMX,YAAY,CAACW,KAAK,CAACC,KAAP,CAAlB;AACH,GAzCgB,CA2CjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEJ;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;AACA,QAAMC,wBAAwB,GAAG,CAACC,CAAD,EAAIC,UAAJ,EAAgBC,MAAhB,KAA2B;AACxDd,IAAAA,iBAAiB,CAAC,CAAC,GAAGD,cAAJ,EAAoBgB,GAApB,CAAwBC,GAAG,IAAI;AAC7C,UAAIA,GAAG,CAACC,WAAJ,KAAoBJ,UAAxB,EAAoC;AAChC,cAAMK,cAAc,GAAGF,GAAG,CAACG,QAA3B;AACAP,QAAAA,CAAC,CAACQ,MAAF,CAASC,OAAT,GACIH,cAAc,CAACI,IAAf,CAAoBR,MAApB,CADJ,GAEII,cAAc,CAACK,MAAf,CAAsBL,cAAc,CAACM,OAAf,CAAuBV,MAAvB,CAAtB,CAFJ;AAGA,eAAO,EACH,GAAGE,GADA;AAEHG,UAAAA,QAAQ,EAAED;AAFP,SAAP;AAIH,OATD,MASO,OAAOF,GAAP;AACV,KAXiB,CAAD,CAAjB;AAYH,GAbD;;AAeA,QAAMS,mBAAmB,GAAG,CAACC,MAAD,EAASZ,MAAT,KAAoB;AAC5CV,IAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAeY,GAAf,CAAmBC,GAAG,IAAI;AACnC,UAAIA,GAAG,CAACW,OAAJ,KAAgBD,MAApB,EAA4B;AACxB,eAAO,EACH,GAAGV,GADA;AAEHY,UAAAA,SAAS,EAAEd;AAFR,SAAP;AAIH,OALD,MAKO,OAAOE,GAAP;AACV,KAPY,CAAD,CAAZ;AAQH,GATD;;AAWA;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,gBAAIX,SAAS,CAACwB;AAAd;AAAA;AAAA;AAAA;AAAA;AAfJ;AAiBH;;GApHQlC,I;;KAAAA,I;AAsHT,eAAeA,IAAf","sourcesContent":["import React, {useEffect, useLayoutEffect, useState} from \"react\";\nimport PartyTable from \"./PartyTable\"\nimport ActivityTable from \"./ActivityTable\"\n\n\nfunction Main(props) {\n    const [currUsers, setCurrUsers] = useState([]);\n    const [currActivities, setCurrActivities] = useState([]);\n    const [selectedActivity, setSelectedActivity] = useState({});\n    const [currItems, setCurrItems] = useState([]);\n    // const [selectedActivity, setSelectedActivity] = useState({\n    //     activity_name: \"nnn\",\n    //     users_id: [1, 2, 3],\n    //     items: [\n    //         {\n    //             \"item_id\": 3,\n    //             \"item_name\": \"lamp\",\n    //             \"item_price\": 100,\n    //             \"bought_by\": 1\n    //         }\n    //     ]\n    // });\n\n    // const getCurrUsers = () => {\n    //     fetch('/get_users')\n    //         .then(res => res.json())\n    //         .then(json => setCurrUsers(json.party_users));\n    // }\n    //\n    // const getCurrActivities = () => {\n    //     fetch('/get_activities')\n    //         .then(res => res.json())\n    //         .then(json => setCurrActivities(json.activities));\n    // }\n    //\n    // const getCurrItems = () => {\n    //     fetch('/get_items')\n    //         .then(res => res.json())\n    //         .then(json => setCurrItems(json.items));\n    // }\n    const currParty = props.currParty;\n    console.log('dd');\n    console.log(currParty);\n\n    async function getCurrUsers(party) {\n        await setCurrUsers(party.users);\n    }\n\n    // useEffect(() => {\n    //     let mounted = true;\n    //     if (mounted) {\n    //         getCurrUsers(currParty);\n    //     }\n    //     return () => {\n    //         mounted = false;\n    //     };\n    // }, [currUsers]); // ?\n        // setCurrUsers(currParty.users);\n        // setCurrActivities(currParty.activities);\n        // setSelectedActivity(currParty.activities[0]);\n        // setCurrItems(currParty.activities[0].items);\n        // console.log(currActivities);\n        // return () => {\n        //     setCurrUsers({});\n        //     setCurrActivities({});\n        // };\n\n    // console.log(currUsers);\n    // useEffect(() => {\n    //     setSelectedActivity(currActivities[0]);\n    //     setCurrItems(selectedActivity.items);\n    // }, [currParty, currActivities])\n\n    // last_viewed patch request\n    // edit mode\n    // jsons may be and are empty in the beginning\n\n    // be good without e argument and check by presence of user in array\n    const handleParticipationClick = (e, activityID, userID) => {\n        setCurrActivities([...currActivities].map(obj => {\n            if (obj.activity_id === activityID) {\n                const updatedUsersID = obj.users_id;\n                e.target.checked ?\n                    updatedUsersID.push(userID) :\n                    updatedUsersID.splice(updatedUsersID.indexOf(userID));\n                return {\n                    ...obj,\n                    users_id: updatedUsersID\n                }\n            } else return obj;\n        }));\n    }\n\n    const handlePurchaseClick = (itemID, userID) => {\n        setCurrItems([...currItems].map(obj => {\n            if (obj.item_id === itemID) {\n                return {\n                    ...obj,\n                    bought_by: userID\n                }\n            } else return obj;\n        }));\n    }\n\n    return (\n        // <div className=\"App\">\n        //     {/*<header className=\"App-header\"></header>*/}\n        //     <div className=\"bukh\">\n        //         <h1>{currParty.name}</h1>\n        //         <PartyTable users={currUsers}\n        //                     activities={currActivities}\n        //                     handleParticipationClick={handleParticipationClick}/>\n        //         {/*<h1>{currActivities[0].activity_name}</h1>*/}\n        //         <ActivityTable users={currUsers}\n        //                        items={currItems}\n        //             // selectedActivity={selectedActivity}\n        //                        handlePurchaseClick={handlePurchaseClick}/>\n        //     </div>\n        // </div>\n        <p>{currParty.length}</p>\n    );\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}