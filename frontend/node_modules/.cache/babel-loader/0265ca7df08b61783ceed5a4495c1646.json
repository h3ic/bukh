{"ast":null,"code":"var _jsxFileName = \"/home/h3ic/bukh/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport PartyTable from \"./PartyTable\";\nimport ActivityTable from \"./ActivityTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currUsers, setCurrUsers] = useState([]);\n\n  const getCurrUsers = () => {\n    fetch('/get_users').then(res => res.json()).then(json => setCurrUsers(json.party_users));\n  };\n\n  const [currActivities, setCurrActivities] = useState([]);\n\n  const getCurrActivities = () => {\n    fetch('/get_activities').then(res => res.json()).then(json => setCurrActivities(json.activities));\n  };\n\n  const [currItems, setCurrItems] = useState([]);\n\n  const getCurrItems = () => {\n    fetch('/get_items').then(res => res.json()).then(json => setCurrItems(json.items));\n  };\n\n  useEffect(() => getCurrItems(), []); // const updateActivityUsers = ({activityID, usersID}) => {\n  //     fetch(`/change_activity/${activityID}`, {\n  //         method: 'PATCH',\n  //         body: JSON.stringify({\n  //             \"users_id\": usersID\n  //         }),\n  //         headers: {\n  //             \"Content-type\": \"application/json; charset=UTF-8\"\n  //         }\n  //     })\n  //         .then(response => response.json())\n  //         .then(json => {\n  //             getCurrActivities();\n  //         })\n  // }\n  // updateActivityUsers(1, 2);\n\n  useEffect(() => getCurrUsers(), []);\n  useEffect(() => getCurrActivities(), []); // edit mode\n  // be good without e argument and check by presence of user in array\n\n  const handleParticipationClick = (e, activityID, userID) => {\n    setCurrActivities([...currActivities].map(obj => {\n      if (obj.activity_id === activityID) {\n        const updatedUsersID = obj.users_id;\n        e.target.checked ? updatedUsersID.push(userID) : updatedUsersID.splice(updatedUsersID.indexOf(userID));\n        return { ...obj,\n          users_id: updatedUsersID\n        };\n      } else return obj;\n    }));\n  };\n\n  const handlePurchaseClick = (itemID, userID) => {\n    setCurrItems([...currItems].map(obj => {\n      if (obj.item_id === itemID) {\n        // e.target.checked ?\n        //     updatedUsersID.push(userID) :\n        //     updatedUsersID.splice(updatedUsersID.indexOf(userID));\n        return { ...obj,\n          bought_by: userID\n        };\n      } else return obj;\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bukh\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Party\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PartyTable, {\n        users: currUsers,\n        activities: currActivities,\n        handleParticipationClick: handleParticipationClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ActivityTable, {\n        users: currUsers,\n        activities: currActivities,\n        items: currItems,\n        handlePurchaseClick: handlePurchaseClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"Dk4FAEt7yun5gOFQLVX2O7HbwMQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/h3ic/bukh/frontend/src/App.js"],"names":["React","useEffect","useState","PartyTable","ActivityTable","App","currUsers","setCurrUsers","getCurrUsers","fetch","then","res","json","party_users","currActivities","setCurrActivities","getCurrActivities","activities","currItems","setCurrItems","getCurrItems","items","handleParticipationClick","e","activityID","userID","map","obj","activity_id","updatedUsersID","users_id","target","checked","push","splice","indexOf","handlePurchaseClick","itemID","item_id","bought_by"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport './App.css';\nimport PartyTable from \"./PartyTable\"\nimport ActivityTable from \"./ActivityTable\"\n\n\nfunction App() {\n\n    const [currUsers, setCurrUsers] = useState([]);\n    const getCurrUsers = () => {\n        fetch('/get_users')\n            .then(res => res.json())\n            .then(json => setCurrUsers(json.party_users));\n    }\n\n    const [currActivities, setCurrActivities] = useState([]);\n    const getCurrActivities = () => {\n        fetch('/get_activities')\n            .then(res => res.json())\n            .then(json => setCurrActivities(json.activities));\n    }\n\n    const [currItems, setCurrItems] = useState([]);\n    const getCurrItems = () => {\n        fetch('/get_items')\n            .then(res => res.json())\n            .then(json => setCurrItems(json.items));\n    }\n\n    useEffect(() => getCurrItems(), []);\n\n    // const updateActivityUsers = ({activityID, usersID}) => {\n    //     fetch(`/change_activity/${activityID}`, {\n    //         method: 'PATCH',\n    //         body: JSON.stringify({\n    //             \"users_id\": usersID\n    //         }),\n    //         headers: {\n    //             \"Content-type\": \"application/json; charset=UTF-8\"\n    //         }\n    //     })\n    //         .then(response => response.json())\n    //         .then(json => {\n    //             getCurrActivities();\n    //         })\n    // }\n\n    // updateActivityUsers(1, 2);\n\n    useEffect(() => getCurrUsers(), []);\n    useEffect(() => getCurrActivities(), []);\n\n    // edit mode\n\n    // be good without e argument and check by presence of user in array\n    const handleParticipationClick = (e, activityID, userID) => {\n        setCurrActivities([...currActivities].map(obj => {\n            if (obj.activity_id === activityID) {\n                const updatedUsersID = obj.users_id;\n                e.target.checked ?\n                    updatedUsersID.push(userID) :\n                    updatedUsersID.splice(updatedUsersID.indexOf(userID));\n                return {\n                    ...obj,\n                    users_id: updatedUsersID\n                }\n            } else return obj;\n        }));\n    }\n\n    const handlePurchaseClick = (itemID, userID) => {\n        setCurrItems([...currItems].map(obj => {\n            if (obj.item_id === itemID) {\n                // e.target.checked ?\n                //     updatedUsersID.push(userID) :\n                //     updatedUsersID.splice(updatedUsersID.indexOf(userID));\n                return {\n                    ...obj,\n                    bought_by: userID\n                }\n            } else return obj;\n        }));\n    }\n\n    return (\n        <div className=\"App\">\n            {/*<header className=\"App-header\"></header>*/}\n            <div className=\"bukh\">\n                <h1>Party</h1>\n                <PartyTable users={currUsers}\n                            activities={currActivities}\n                            handleParticipationClick={handleParticipationClick}/>\n                <h1>Activity</h1>\n                <ActivityTable users={currUsers}\n                               activities={currActivities}\n                               items={currItems}\n                               handlePurchaseClick={handlePurchaseClick}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}